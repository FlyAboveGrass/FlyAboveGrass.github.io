(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{525:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"什么是正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是正则表达式"}},[t._v("#")]),t._v(" 什么是正则表达式")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("正则表达式(regular expression)描述了一种字符串匹配的模式（pattern）")])])]),t._v(" "),a("p",[t._v('正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为"元字符"）组成的'),a("strong",[t._v("文字模式")]),t._v("。模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。")]),t._v(" "),a("h3",{attrs:{id:"使用正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式"}},[t._v("#")]),t._v(" 使用正则表达式")]),t._v(" "),a("p",[t._v("用于模式匹配的string方法：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zh.javascript.info/regexp-methods#strsearchregexp",target:"_blank",rel:"noopener noreferrer"}},[t._v("search(regexp) "),a("OutboundLink")],1),t._v("：返回第一个匹配项的位置。返回匹配的位置的下标数字")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.javascript.info/regexp-methods#strreplacestrregexpstrfunc",target:"_blank",rel:"noopener noreferrer"}},[t._v("replace(str|regexp, str|func)"),a("OutboundLink")],1),t._v("： 搜索和替换的通用方法。返回替换之后的结果")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.javascript.info/regexp-methods#strmatchregexp",target:"_blank",rel:"noopener noreferrer"}},[t._v("match(regexp)"),a("OutboundLink")],1),t._v(":  找到匹配 "),a("code",[t._v("regexp")]),t._v(" 的字符串，返回的是一个数组")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zh.javascript.info/regexp-methods#strsplitregexpsubstrlimit",target:"_blank",rel:"noopener noreferrer"}},[t._v("split(regexp|substr, limit)"),a("OutboundLink")],1),t._v("： 作为分隔符来分割字符串。一旦匹配，则将前面的内容放进一个数组，返回一个数组")])]),t._v(" "),a("p",[t._v("RegExp的内置方法")]),t._v(" "),a("ul",[a("li",[t._v("exec： 和 match 类似")]),t._v(" "),a("li",[t._v("test： 返回一个 boolean 判断是否匹配")])]),t._v(" "),a("h3",{attrs:{id:"正则表达式中的字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式中的字符"}},[t._v("#")]),t._v(" 正则表达式中的字符")]),t._v(" "),a("h4",{attrs:{id:"普通字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#普通字符"}},[t._v("#")]),t._v(" 普通字符")]),t._v(" "),a("p",[t._v("普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括")]),t._v(" "),a("ul",[a("li",[t._v("所有大写和小写字母")]),t._v(" "),a("li",[t._v("所有数字")]),t._v(" "),a("li",[t._v("所有标点符")]),t._v(" "),a("li",[t._v("一些其他符号")])]),t._v(" "),a("h4",{attrs:{id:"非打印字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非打印字符"}},[t._v("#")]),t._v(" 非打印字符")]),t._v(" "),a("p",[t._v("打印不会显示")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\\cx  匹配由x指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 'c' 字符。\n\\f  匹配一个换页符。等价于 \\x0c 和 \\cL。\n\\n  匹配一个换行符。等价于 \\x0a 和 \\cJ。\n\\r  匹配一个回车符。等价于 \\x0d 和 \\cM。\n\\s  匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。注意 Unicode 正则表达式会匹配全角空格符。\n\\S  匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。\n\\t  匹配一个制表符。等价于 \\x09 和 \\cI。\n\\v  匹配一个垂直制表符。等价于 \\x0b 和 \\cK。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"特殊字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊字符"}},[t._v("#")]),t._v(" 特殊字符")]),t._v(" "),a("p",[t._v("就是一些有特殊含义的字符")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ 匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性， 则 $ 也匹配 '\\n' 或'\\r'。要匹配 $ 字符本身，请使用 \\$\n( )  标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用\\ ( 和 \\)\n*  匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \\*\n+  匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \\+\n.  匹配除换行符 \\n 之外的任何单字符。要匹配 ，请使用 \\. \n[  匹配字符范围（如 [a-z]）。要匹配 [，请使用 \\[\n?  匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \\?\n\\  将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符\n^  匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合\n      要匹配 ^ 字符本身，请使用 \\^。\n{  标记限定符表达式的开始。要匹配 {，请使用 \\{\n|  指明两项之间的一个选择。要匹配 |，请使用 \\|\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\\w：用于匹配字母，数字或下划线字符； \n\\W：用于匹配所有与\\w不匹配的字符；\n\\d\t匹配一个字数字符，/\\d/ = /[0-9]/\n\\D\t匹配一个非字数字符，/\\D/ = /[^0-9]/\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("p",[t._v("限定正则表达式的作用范围")]),t._v(" "),a("ul",[a("li",[t._v("i： 代表不区分大小写")]),t._v(" "),a("li",[t._v("g： 全局匹配，而不是在找到第一个之后就停止")]),t._v(" "),a("li",[t._v("m： 多行匹配，^ 匹配一行的开头或者字符串开头， $匹配一行的结束或者字符串结束。")])]),t._v(" "),a("h4",{attrs:{id:"定位符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位符"}},[t._v("#")]),t._v(" 定位符")]),t._v(" "),a("p",[t._v("定位符用来描述字符串或单词的边界")]),t._v(" "),a("p",[a("strong",[t._v("^")]),t._v("       匹配输入字符串开始的位置。\n"),a("strong",[t._v("$")]),t._v("       匹配输入字符串结尾的位置。\n"),a("strong",[t._v("\\b")]),t._v("      匹配一个单词边界，即字与空格间的位置。\n"),a("strong",[t._v("\\B")]),t._v("     非单词边界匹配。")]),t._v(" "),a("h4",{attrs:{id:"限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限定符"}},[t._v("#")]),t._v(" 限定符")]),t._v(" "),a("p",[t._v("限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('*  匹配前面的子表达式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等价于{0,}。\n\n+  匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等价于 {1,}。\n\n?  匹配前面的子表达式零次或一次。例如，"do(es)?" 可以匹配 "do" 、 "does" 中的 "does" 、 "doxy" 中的 "do" 。? 等价于 {0,1}。\n\n{n}  n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 "Bob" 中的 \'o\'，但是能匹配 "food" 中的两个 o。\n\n{n,}  n 是一个非负整数。至少匹配n 次。例如，\'o{2,}\' 不能匹配 "Bob" 中的 \'o\'，但能匹配 "foooood" 中的所有 o。\'o{1,}\' 等价于 \'o+\'。\'o{0,}\' 则等价于 \'o*\'。\n\n{n,m} m 和 n 均为非负整数，其中n <= m。最少匹配 n 次且最多匹配 m 次。请注意在逗号和两个数之间不能有空格。\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[a("u",[t._v("注意：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。")])]),t._v(" "),a("h5",{attrs:{id:"贪婪匹配-非贪婪匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配-非贪婪匹配"}},[t._v("#")]),t._v(" 贪婪匹配/非贪婪匹配")]),t._v(" "),a("p",[t._v("​\t上面的内容代表的是一种贪婪的匹配，正则表达式会尽可能多的去匹配字符。")]),t._v(" "),a("p",[t._v("​\t当使用非贪婪的匹配时，则会在满足正则的前提下尽可能少的匹配，只需要在待匹配的字符的后面加一个问号即可。")]),t._v(" "),a("p",[t._v("​\t如 ？？，+？等 ， 例如 /a+？/ 匹配aaa的时候，只会匹配一个a。")]),t._v(" "),a("h3",{attrs:{id:"常见的正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的正则表达式"}},[t._v("#")]),t._v(" 常见的正则表达式")]),t._v(" "),a("ol",[a("li",[t._v("邮箱 "),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#footnote1"}},[t._v("[1]")]),a("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref1"}})]),t._v("+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$")]),t._v(" "),a("li",[t._v("域名 "),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#footnote2"}},[t._v("[2]")]),a("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref2"}})]),t._v("+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$")]),t._v(" "),a("li",[t._v("手机号 ^1(3|4|5|6|7|8|9)\\d{9}$")]),t._v(" "),a("li",[t._v("账号 "),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#footnote3"}},[t._v("[3]")]),a("a",{staticClass:"footnote-anchor",attrs:{id:"footnote-ref3"}})]),t._v("[a-zA-Z0-9_]{4,15}$")])]),t._v(" "),a("hr",{staticClass:"footnotes-sep"}),t._v(" "),a("section",{staticClass:"footnotes"},[a("ol",{staticClass:"footnotes-list"},[a("li",{staticClass:"footnote-item",attrs:{id:"footnote1"}},[a("p",[t._v("a-zA-Z0-9_- "),a("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref1"}},[t._v("↩︎")])])]),t._v(" "),a("li",{staticClass:"footnote-item",attrs:{id:"footnote2"}},[a("p",[t._v("A-Za-z0-9\\u4e00-\\u9fa5 "),a("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref2"}},[t._v("↩︎")])])]),t._v(" "),a("li",{staticClass:"footnote-item",attrs:{id:"footnote3"}},[a("p",[t._v("a-zA-Z "),a("a",{staticClass:"footnote-backref",attrs:{href:"#footnote-ref3"}},[t._v("↩︎")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);